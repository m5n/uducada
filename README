uducada = UI Development Using Class and Data Attributes
(Note: still a work in progress.)

Uducada automates UI development via HTML attributes.  It removes the need to write JavaScript code for creating and hooking up widgets and needing to provide common user experience patterns.  Uducada takes care of all this for you.

By using specific markup, class attributes and data attributes, UI development is simplified and UI consistency is improved.  Widgets will become purely event driven and the only JavaScript needed will be to handle those events.

Because of these rules, it's very easy to create your own helper functions in Ruby, Java or any other server-side language to write out the exact markup needed.

Although uducada relies on third-party libraries to provide UI widgets, these libraries are abstracted out so any framework can be used.  Initially there is support for jQuery UI but you can easily add an adapter for your framework of choice.

A uducada JavaScript object is available for advanced features, but for the common case user interactions, there's no additional JavaScript library to learn.

See Wiki for complete feature and usage information.

Principles:
- Abstract external JS and UI frameworks so that any framework can be used
- Support delayed initialization of widgets
- CSS and JS go in external files, never inline or nested within the HTML
  (the included demos violate only this principle as their purpose is educational)
- <link> tags go in the <head>, <script> tags go just before </body>
- User-facing strings go in HTML, never in CSS or JS
- Widget config is done via standard and valid HTML attributes whenever possible
  or via custom data attributes or class values otherwise

Author:
- Maarten van Egmond

Thanks:
- For free images: http://preloaders.net/

History:
- April 30, 2012: Main form features
- April 29, 2012: Main busy mask features
- April 16, 2012: Framework abstraction
- April 14, 2012: Main dialog features
- April 13, 2012: First checkin
